snippet template "Basic template" b
\documentclass[12pt]{article}
\usepackage{fontspec}
\usepackage[T1]{fontenc}
\usepackage[title]{appendix}
\usepackage{titlesec}
\usepackage[bookmarks]{hyperref}
\usepackage[indent=15pt]{parskip}
\usepackage{enumitem}
\usepackage{ctable}
\usepackage{multirow}
\usepackage[indent=15pt]{parskip}
\usepackage{geometry}
\usepackage{graphicx}
\usepackage[english]{babel}
\usepackage[backend=biber,style=${1:apa}]{biblatex}
\usepackage{csquotes}
\usepackage{siunitx}
\usepackage{hyperref}
\DeclareFieldFormat{apacase}{#1}
\DeclareLanguageMapping{english}{english-apa}
\addbibresource{${2:bib}.bib}

\geometry{
  a4paper,
  total={170mm,257mm},
  left=20mm,
  top=20mm,
}

\begin{document}

\begin{titlepage}
  \vspace*{\fill}
  \centering
  \LARGE ${3:Title} \par
  \vspace{1cm}
  \large Ham Wen Hong \par
  \vspace{0.1cm}
  \large 1171103503 \par
  \vspace{0.1cm}
  \large Multimedia University \par
  \vspace{0.5cm}
  \large ${4:Due Date} \par
  \vspace*{\fill}
\end{titlepage}

$0
\end{document}
endsnippet

snippet tikz "tikz" b
\documentclass[convert={density=200,outext=.png}]{standalone}
\usepackage{tikz}
\usepackage{color}

\begin{document}
\begin{tikzpicture}
  $0
\end{tikzpicture}
\end{document}
endsnippet

snippet	begg "begin{} / end{}" bA
\begin{$1}$0
\end{$1}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet tab "Table" b
\begin{minipace}{\textwidth}
\definecolor{${1:LightGray}{gray}{0.95}
\definecolor{${2:DarkGray}{gray}{0.75}
\bgroup
\setlength{\tabcolsep{${3:20pt}
\def\arraystretch{${4:2}}%
{\rowcolors{2}{${1:LightGray}}{${2:DarkGray}}
\begin{tabular}{${5:cc}}
    $2 & $3
\end{tabular}
}
\egroup
\end{minipage}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

# snippet dm "Math" wA
# \[
# $1
# .\] $0
# endsnippet

# snippet '([A-Za-z])(\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
# endsnippet

# snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
# endsnippet

# snippet sq "^2" iA
# ^2
# endsnippet

# snippet cb "^3" iA
# ^3
# endsnippet

# snippet td "superscript" iA
# ^{$1}$0
# endsnippet

# snippet // "Fraction" iA
# \\frac{$1}{$2}$0
# endsnippet

# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet

# priority 1000
# snippet '^.*\)/' "() Fraction" wrA
# `!p
# stripped = match.string[:-1]
# depth = 0
# i = len(stripped) - 1
# while True:
# 	if stripped[i] == ')': depth += 1
# 	if stripped[i] == '(': depth -= 1
# 	if depth == 0: break;
# 	i -= 1
# snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
# `{$1}$0
# endsnippet

# snippet != "equals" iA
# \neq
# endsnippet

# snippet ceil "ceil" iA
# \left\lceil $1 \right\rceil $0
# endsnippet

# snippet floor "floor" iA
# \left\lfloor $1 \right\rfloor$0
# endsnippet

# snippet pmat "pmat" iA
# \begin{pmatrix} $1 \end{pmatrix} $0
# endsnippet

# snippet bmat "bmat" iA
# \begin{bmatrix} $1 \end{bmatrix} $0
# endsnippet

# snippet sum "sum" w
# \sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
# endsnippet

# snippet taylor "taylor" w
# \sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
# endsnippet

# snippet lim "limit" w
# \lim_{${1:n} \to ${2:\infty}}
# endsnippet

# snippet <= "leq" iA
# \le
# endsnippet

# snippet >= "geq" iA
# \ge
# endsnippet
